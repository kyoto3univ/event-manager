rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function checkMailAddress() {
      return request.auth.token.email.matches('.*@edu[.]kit[.]ac[.]jp');
    }

    function isAuthenticated() {
      return request.auth != null && request.auth.token.email_verified && checkMailAddress();
    }

    function isAdminRole() {
      return request.auth.token.admin == true;
    }

    function isEditorRole() {
      return request.auth.token.editor == true;
    }

    // イベント一覧DB
    match /events/{eventId} {
      allow get: if resource.data.published == true || isEditable(); // イベント単体は公開されていれば誰でも取得できる
      allow create: if checkCreator(); // イベント作成は編集可能リストに自身のみが入ることを確認
      allow update, delete, list: if isEditable(); // 管理者と編集可能リスト内の人が削除と更新できる（はず）

      function checkCreator() {
        return isAuthenticated() &&
          (isAdminRole() || isEditorRole()) &&
          request.resource.data.editors is list &&
          request.resource.data.editors.size() == 1 &&
          request.auth.uid in request.resource.data.editors;
      }

      function isEditable() {
        return isAuthenticated() && (isAdminRole() || request.auth.uid in resource.data.editors);
      }

      // 参加者DB
      match /participants/{userId} {
        allow get: if isEditable() || checkUserIsSelf(userId); // 編集できる人か自身が取得できる
        allow create: if checkCreate(); // 自身のみが作成できる（参加承認を除く）
        allow delete: if checkUserIsSelf(userId); // 自身のみが削除できる
        allow update, list: if isEditable(); // 編集可能な人が変更できる（参加承認など推定）

        function checkUserIsSelf(userId) {
          return isAuthenticated() && userId == request.auth.uid;
        }

        function checkCreate() {
          return checkUserIsSelf(userId) &&
            request.resource.data.accepted is bool &&
            request.resource.data.accepted != true;
        }
      }

      // メールコンテンツと通知コンテンツ用(会場リンクなど)
      match /secrets/{contentId} {
        allow get, create, update, delete: if isEditable() && (contentId == 'email' || contentId == 'push');
      }
    }

    // 特権ユーザ（editor, admin）用ユーザDB
    match /users/{userId} {
      allow create, delete, list: if isAuthenticated() && isAdminRole(); // 管理者のみ作成・削除可能、一覧表示可能
      allow update: if isAuthenticated() && (checkUpdate(userId) || isAdminRole()); // 管理者とアカウント本人が更新可能
      allow get: if isAuthenticated() && (checkUserIsSelf(userId) || isAdminRole()); // 管理者とアカウント本人が取得可能

      function checkUserIsSelf(userId) {
        return userId == request.auth.uid;
      }

      function checkUpdate(userId) {
        return checkUserIsSelf(userId) && request.resource.data.role == resource.data.role;
      }
    }
  }
}
